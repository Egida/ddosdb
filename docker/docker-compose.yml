version: '3.7'

services:

  mongodb:
    image: mongo
    container_name: ddosdb_mongo
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ddosdb_mongodb:/data/db
    networks:
      - ddosdb
    expose:
      - 27017
    restart: unless-stopped

  mongo-express:
    image: mongo-express
    container_name: ddosdb_mongo_express
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
    env_file:
      - ./temp/environment.prod
    networks:
      - ddosdb
    ports:
      - 127.0.0.1:8081:8081
    depends_on:
      - mongodb
    restart: unless-stopped

  db:
    image: postgres:13-alpine
    container_name: ddosdb_db
    volumes:
      - ddosdb_postgres:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=ddosdb
      - POSTGRES_PASSWORD=ddosdb
      - POSTGRES_DB=ddosdb
    networks:
      - ddosdb
    expose:
      - 5432
    restart: unless-stopped

  ddosdb:
    container_name: ddosdb_ddosdb
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: gunicorn website.wsgi:application --bind 0.0.0.0:8000
    env_file:
      - ./temp/environment.prod
    volumes:
      - ddosdb_static:/home/ddosdb/ddosdb-static/
      - ddosdb_data:/home/ddosdb/ddosdb-data/
    networks:
      - ddosdb
    expose:
     - 8000
    depends_on:
      - db
      - mongodb
    restart: unless-stopped

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    container_name: ddosdb_nginx
    volumes:
      - ddosdb_static:/home/ddosdb/ddosdb-static/
      - ddosdb_data:/home/ddosdb/ddosdb-data/
      - ddosdb_letsencrypt:/etc/letsencrypt/
      - ddosdb_nginx_etc:/etc/nginx/conf.d/
    networks:
      - ddosdb
    ports:
      - 80:80
      - 443:443
    depends_on:
      - ddosdb
    restart: unless-stopped

volumes:
  ddosdb_mongodb:
  ddosdb_postgres:
  ddosdb_static:
  ddosdb_data:
  ddosdb_letsencrypt:
  ddosdb_nginx_etc:

networks:
  ddosdb: