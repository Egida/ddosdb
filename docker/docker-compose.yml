version: '3.7'

services:

  mongodb:
    image: mongo
#    container_name: mongo
    environment:
      - PUID=1000
      - PGID=1000
      # - MONGO_INITDB_ROOT_USERNAME=admin
      # - MONGO_INITDB_ROOT_PASSWORD=adminadmin
    volumes:
      - mongodb-data:/data/db
      - ./mongo-entrypoint/:/docker-entrypoint-initdb.d/
#    ports:
#      - 127.0.0.1:27017:27017
    expose:
      - 27017
    restart: unless-stopped

  mongo-express:
    image: mongo-express
#    container_name: mongo-express
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
    env_file:
      - ./environment.prod
    volumes:
      - mongodb-data
    ports:
      - 127.0.0.1:8081:8081
    depends_on:
      - mongodb
    restart: unless-stopped

  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=ddosdb
      - POSTGRES_PASSWORD=ddosdb
      - POSTGRES_DB=ddosdb
    expose:
      - 5432
    restart: unless-stopped

  ddosdb:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: gunicorn website.wsgi:application --bind 0.0.0.0:8000
    env_file:
      - ./environment.prod
    volumes:
      - static_volume:/home/ddosdb/ddosdb-static/
      - data_volume:/home/ddosdb/ddosdb-data/
    expose:
     - 8000
    depends_on:
      - db
      - mongodb
    restart: unless-stopped

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/ddosdb/ddosdb-static/
      - data_volume:/home/ddosdb/ddosdb-data/
    ports:
      - 80:80
    depends_on:
      - ddosdb
    restart: unless-stopped

volumes:
  mongodb-data:
#    driver: local
  postgres_data:
  static_volume:
  data_volume:
